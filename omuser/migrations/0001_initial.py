# Generated by Django 3.1.5 on 2021-01-23 16:18

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import omflow.syscom.customfield
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='OmGroup',
            fields=[
                ('group_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth.group')),
                ('functional_flag', models.BooleanField(default=False, verbose_name='功能群組標記')),
                ('ad_flag', models.BooleanField(default=False, verbose_name='AD標記')),
                ('description', models.TextField(blank=True, verbose_name='說明')),
                ('display_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='顯示名稱')),
                ('updatetime', models.DateTimeField(auto_now=True, verbose_name='更新時間')),
                ('group_uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='uuid')),
                ('parent_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children_group', to='omuser.omgroup', verbose_name='上層群組')),
            ],
            options={
                'permissions': (('OmGroup_Add', '新增組織/角色'), ('OmGroup_Modify', '修改組織/角色'), ('OmGroup_View', '檢視組織/角色'), ('OmGroup_Delete', '刪除組織/角色')),
                'default_permissions': (),
            },
            bases=('auth.group',),
            managers=[
                ('objects', django.contrib.auth.models.GroupManager()),
            ],
        ),
        migrations.CreateModel(
            name='OmUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='電子郵件')),
                ('nick_name', models.CharField(max_length=50, verbose_name='暱稱')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='生日')),
                ('gender', models.CharField(choices=[('male', '男'), ('female', '女')], default='male', max_length=10, verbose_name='性別')),
                ('phone1', models.CharField(blank=True, max_length=20, null=True, verbose_name='電話')),
                ('phone2', models.CharField(blank=True, max_length=20, null=True, verbose_name='手機')),
                ('department', models.CharField(blank=True, max_length=200, null=True, verbose_name='部門名稱')),
                ('company', models.CharField(blank=True, max_length=200, null=True, verbose_name='公司名稱')),
                ('ad_flag', models.BooleanField(default=False, verbose_name='AD標記')),
                ('ad_sid', models.CharField(blank=True, max_length=100, null=True, verbose_name='AD_SID')),
                ('frequency', models.IntegerField(default=5, verbose_name='更新頻率')),
                ('updatetime', models.DateTimeField(auto_now=True, verbose_name='更新時間')),
                ('user_uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='uuid')),
                ('delete', models.BooleanField(default=False, verbose_name='刪除')),
                ('default_group', models.TextField(blank=True, null=True, verbose_name='預設群組')),
                ('substitute', models.TextField(default='[]', verbose_name='職代人')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'permissions': (('OmUser_Add', '新增使用者'), ('OmUser_Modify', '修改使用者'), ('OmUser_View', '檢視使用者'), ('OmUser_Delete', '刪除使用者')),
                'default_permissions': (),
            },
            managers=[
                ('objects', omflow.syscom.customfield.UserFormatManager()),
            ],
        ),
    ]
